---
title: "Worse is better case study 2"
subtitle: "Parquet Today > SQL Delay"
author: "Daniel Kick"
date: "2024-06-20"
image: ""
categories: 
  - intermediate
freeze: true
draft: true
---

Note: Although the work described here took place be[^1]fore [SQL Strikes Back](posts/DanielKick/240905_postgres_via_parquet/index.qmd) I wrote it long after due to project priorties. At time of writing (25-01-03) I'm not using postgres to store these data. The database ended up taking too much space on my workstation (\~1.7T).

[^1]: At the time it was not practical to determine whether this was due to decreased compression or a flaw in my data entry (e.g. unwittingly writing duplicate records). The idea remains appealing and I hope to return to it.

As part of an ongoing project I need to retrieve ApsimX simulated phenotypes. Issue is, I generated [a lot](/posts/DanielKick/230913_filtering_to_save_88pr_space/index.qmd) of data. Far more than will fit on a single GPU. Ideally, all these data would be stored in a SQL database. That would allow us to conveniently retrieve a training set *or* retrieve each minibatch without worrying about which files the data is stored in.

This needs to be ready sooner rather than later for others in the lab to work with, so instead of learning *just enough* database administration to get the job done I'm going to use parquet files to store the records and build just the functionality we need for now.

At present the expected workflow is to

1.  Define the desired data (based on location, cultivar parameters, years, etc.)
2.  Use `data_helper` to identify and prepare the needed data as arrays
3.  Write out the these arrays and move them to the computer that will be training the model
4.  Proved arrays to `apsimxDataset`

## A pretend database with Parquet files

The tables we are interested in are currently all stored in `/home/Shared/`

| Directory | Contains | parquet |
|------------------|-----------------------------------|--------------------|
| apsimx_env_data | Weather and Soil data | apsimx_i_soil_ssurgo_profile |
| cultivar_sim_exps | ApsimX's default cultivars | DefaultCultivarsAll |
| cultivar_sim_exps | Simulated Genotype cultivar parameters | Genotypes |
| cultivar_sim_exps | Identifiers to link enviroment, cultivar, and results | Ids |
| cultivar_sim_exps | Simulated phenotypic data | sim_1698440407_4739 (etc) |

We can inspect one of these tables:


```Python
apsimx_sim_parquet_dir = '/home/Shared/cultivar_sim_exps'
pq.read_table(apsimx_sim_parquet_dir+'/'+'Ids.parquet').to_pandas()

Ids.head()
```


|   | File | Longitude | Latitude | SoilIdx | SowDate | Genotype | FactorialUID |
|---------|---------|---------|---------|---------|---------|---------|---------|
| 0 | sim_1697173207_62279 | -76.656119 | 42.733264 | 141 | 19-Jun | Cultivar1 | 1 |
| 1 | sim_1697173207_62279 | -76.656119 | 42.733264 | 141 | 15-Jun | Cultivar1 | 2 |
| 2 | sim_1697173207_62279 | -76.656119 | 42.733264 | 141 | 07-Jun | Cultivar1 | 3 |
| 3 | sim_1697173207_62279 | -76.656119 | 42.733264 | 141 | 30-May | Cultivar1 | 4 |
| 4 | sim_1697173207_62279 | -76.656119 | 42.733264 | 141 | 26-May | Cultivar1 | 5 |
